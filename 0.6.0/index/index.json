{"interfaceLanguages":{"swift":[{"children":[{"title":"Collections","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/init(_:)-4lqng","title":"init(IdentifiedArray<ID, Element>.SubSequence)","type":"init"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/init(_:)-5jn74","title":"init(IdentifiedArray<ID, Element>)","type":"init"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/init(_:id:)","title":"init<S>(S, id: KeyPath<Element, ID>)","type":"init"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/init(id:)","title":"init(id: KeyPath<Element, ID>)","type":"init"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/init(uncheckeduniqueelements:)","title":"init<S>(uncheckedUniqueElements: S)","type":"init"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/init(uncheckeduniqueelements:id:)","title":"init<S>(uncheckedUniqueElements: S, id: KeyPath<Element, ID>)","type":"init"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/init(uniqueelements:)","title":"init<S>(uniqueElements: S)","type":"init"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/init(uniqueelements:id:)","title":"init<S>(uniqueElements: S, id: KeyPath<Element, ID>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/elements","title":"var elements: [Element]","type":"property"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/id","title":"let id: KeyPath<Element, ID>","type":"property"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/ids","title":"var ids: OrderedSet<ID>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/append(_:)","title":"func append(Element) -> (inserted: Bool, index: Int)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/contains(_:)","title":"func contains(Element) -> Bool","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/filter(_:)","title":"func filter((Element) throws -> Bool) rethrows -> IdentifiedArray<ID, Element>","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/index(id:)","title":"func index(id: ID) -> Int?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/insert(_:at:)","title":"func insert(Element, at: Int) -> (inserted: Bool, index: Int)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/move(fromoffsets:tooffset:)","title":"func move(fromOffsets: IndexSet, toOffset: Int)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/remove(_:)","title":"func remove(Element) -> Element?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/remove(atoffsets:)","title":"func remove(atOffsets: IndexSet)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/remove(id:)","title":"func remove(id: ID) -> Element?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/removelast()","title":"func removeLast() -> Element","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/removelast(_:)","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/removesubrange(_:)-7lj8j","title":"func removeSubrange<R>(R)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/reverse()-7810r","title":"func reverse()","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/shuffle()-9lt83","title":"func shuffle()","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/shuffle(using:)-n7ld","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/sort()-36wqp","title":"func sort()","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/sort(by:)-36swl","title":"func sort(by: (Element, Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/update(_:at:)","title":"func update(Element, at: Int) -> Element","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/updateorappend(_:)","title":"func updateOrAppend(Element) -> Element?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/updateorinsert(_:at:)","title":"func updateOrInsert(Element, at: Int) -> (originalMember: Element?, index: Int)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/subscript(id:)","title":"subscript(id _: ID) -> Element?","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/firstrange(of:)-1j6pm","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/joined(separator:)-6x8cp","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/identifiedcollections\/identifiedarray\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/underestimatedcount-254zk","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/firstrange(of:)-jafm","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/map(_:)-5958q","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/split(separator:maxsplits:omittingemptysubsequences:)-5vd6w","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/split(separator:maxsplits:omittingemptysubsequences:)-9jhs0","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/subscript(_:)-2rp1v","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/subscript(_:)-2tptw","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/subscript(_:)-4z27y","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/subscript(_:)-55ekf","title":"subscript(Int) -> Element","type":"subscript"}],"path":"\/documentation\/identifiedcollections\/identifiedarray\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/identifiedcollections\/identifiedarray\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/custommirror","title":"var customMirror: Mirror","type":"property"}],"path":"\/documentation\/identifiedcollections\/identifiedarray\/customreflectable-implementations","title":"CustomReflectable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/identifiedcollections\/identifiedarray\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/identifiedcollections\/identifiedarray\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/identifiedcollections\/identifiedarray\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/==(_:_:)","title":"static func == (IdentifiedArray<ID, Element>, IdentifiedArray<ID, Element>) -> Bool","type":"op"}],"path":"\/documentation\/identifiedcollections\/identifiedarray\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/init(arrayliteral:)","title":"init(arrayLiteral: Element...)","type":"init"}],"path":"\/documentation\/identifiedcollections\/identifiedarray\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/identifiedcollections\/identifiedarray\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/partition(by:)-1dx99","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/partition(by:)-1ger0","title":"func partition(by: (Element) throws -> Bool) rethrows -> Int","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/partition(by:)-erxf","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/reverse()-355ke","title":"func reverse()","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/shuffle()-26bml","title":"func shuffle()","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/shuffle(using:)-61uvw","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/sort()-v8o2","title":"func sort()","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/sort(by:)-woba","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/sort(using:)-1fi55","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/sort(using:)-3v7v1","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/swapat(_:_:)-1d0s0","title":"func swapAt(Int, Int)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/swapat(_:_:)-2hsq9","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/subscript(_:)-48vbw","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/subscript(_:)-697qo","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/subscript(_:)-6xp3z","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/subscript(_:)-9tu9n","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/subscript(_:)-i1oc","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/identifiedcollections\/identifiedarray\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/identifiedcollections\/identifiedarray\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/init()","title":"init()","type":"init"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/init(_:)-4kn9a","title":"init<S>(S)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/append(contentsof:)","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/remove(at:)","title":"func remove(at: Int) -> Element","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/removeall(keepingcapacity:)","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/removeall(where:)","title":"func removeAll(where: (Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/removefirst()","title":"func removeFirst() -> Element","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/removefirst(_:)","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/removesubrange(_:)-18qiq","title":"func removeSubrange(Range<Int>)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/replacesubrange(_:with:)","title":"func replaceSubrange<C>(Range<Int>, with: C)","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/reservecapacity(_:)","title":"func reserveCapacity(Int)","type":"method"}],"path":"\/documentation\/identifiedcollections\/identifiedarray\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/underestimatedcount-8om4a","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/flatmap(_:)-1oep4","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/flatmap(_:)-kfgm","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/joined(separator:)-4kv4r","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/joined(separator:)-7atph","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/map(_:)-478gs","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/sorted(using:)-8afmw","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/sorted(using:)-8dhp7","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/split(separator:maxsplits:omittingemptysubsequences:)-3mgtu","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/identifiedcollections\/identifiedarray\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/identifiedcollections\/identifiedarray\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/identifiedcollections\/identifiedarray","title":"IdentifiedArray","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/identifiedcollections\/identifiedarrayof","title":"IdentifiedArrayOf","type":"typealias"}],"path":"\/documentation\/identifiedcollections","title":"IdentifiedCollections","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}